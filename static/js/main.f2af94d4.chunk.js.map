{"version":3,"sources":["components/Pagination/index.jsx","components/Spinner/index.jsx","components/EmptyView/index.jsx","components/ResultItem/index.jsx","components/ResultsList/index.jsx","components/ChangeSortDirButton/index.jsx","services/reposService.js","config/index.js","containers/RepositoriesList/actionTypes.js","containers/RepositoriesList/actions.js","containers/RepositoriesList/hooks/useGithubReposTable.js","hooks/usePagination.js","hooks/useDebouncedEffect.js","containers/RepositoriesList/index.jsx","components/SearchInput/index.jsx","containers/RepositoriesList/reducer.js","store/index.js","containers/SearchPage/index.jsx","index.js"],"names":["Pagination","currentPage","totalPages","handleChangePage","forcePage","pageCount","containerClassName","onPageChange","subContainerClassName","activeClassName","Spinner","className","EmptyView","ResultsItem","name","html_url","stargazers_count","href","ResultsList","list","map","id","restData","ResultItem","ChangeSortDirButton","dir","handleClick","onClick","cache","cancelController","getRepositories","a","input","page","sort","url","abort","controller","AbortController","fetch","signal","response","json","items","totalCount","total_count","Object","keys","length","getOwnPropertyNames","prop","SET_REPOS","SET_TOTAL_REPOS","SET_IS_LOADING","TO_DEFAULT","setRepos","users","type","payload","setIsLoading","isLoading","requestGithubUsers","params","dispatch","api","console","log","useGithubReposTable","useDispatch","useState","sortDir","setSortDir","useSelector","state","repos","totalItems","itemsPerPage","setCurrentPage","useMemo","Math","ceil","usePagination","getTableData","restParams","actions","effect","delay","deps","callback","useCallback","useEffect","handler","setTimeout","clearTimeout","useDebouncedEffect","selected","handleChangeSortDir","RepositoriesList","inputText","SearchInput","handleChange","value","placeholder","onChange","initialState","usersReducer","action","middlewares","thunk","composedEnhancers","applyMiddleware","reducers","reposReducer","rootReducer","combineReducers","store","createStore","SearchPage","setInput","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2af94d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport './style.scss';\r\n\r\nconst Pagination = ({ currentPage, totalPages, handleChangePage }) => {\r\n  return (\r\n    <ReactPaginate\r\n      forcePage={currentPage}\r\n      pageCount={totalPages}\r\n      containerClassName={'pagination'}\r\n      onPageChange={handleChangePage}\r\n      subContainerClassName={'pages pagination'}\r\n      activeClassName={'active'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Spinner = () => (\r\n  <div className=\"lds-css ng-scope\">\r\n    <div className=\"lds-rolling\">\r\n      <div />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst EmptyView = () => {\r\n  return (\r\n    <div className='empty__container'>\r\n      <p className='empty__title'>Nothing to show...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyView;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst ResultsItem = ({ name, html_url, stargazers_count }) => {\r\n  return (\r\n    <li className='results-item__container'>\r\n      <a\r\n        className='results-item__text results-item__text--link'\r\n        href={html_url}\r\n      >\r\n        {name}\r\n      </a>\r\n      <p className='results-item__text'> Stars - {stargazers_count}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ResultsItem;\r\n","import React from 'react';\r\n\r\nimport ResultItem from 'components/ResultItem';\r\n\r\nimport './style.scss';\r\n\r\nconst ResultsList = ({ list }) => {\r\n  return (\r\n    <div className='results__container'>\r\n      <ul className='results__list'>\r\n        {list?.map(({ id, ...restData }) => (\r\n          <ResultItem key={id} {...restData} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsList;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst ChangeSortDirButton = ({ dir, handleClick }) => {\r\n  return (\r\n    <div className='sort-dir__container'>\r\n      <button className='sort-dir__button' onClick={handleClick}>\r\n        Change sort direction(now {dir})\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeSortDirButton;\r\n","import {\r\n  BACKEND_URL,\r\n  ITEMS_PER_PAGE,\r\n  DEFAULT_SORT,\r\n  LIMIT_CACHE_ITEMS,\r\n} from 'config/index';\r\n\r\nconst cache = {};\r\n\r\nlet cancelController = null;\r\n\r\nexport const getRepositories = async ({\r\n  input,\r\n  page,\r\n  dir,\r\n  sort = DEFAULT_SORT,\r\n}) => {\r\n  const url = `${BACKEND_URL}/search/repositories?q=${input}&per_page=${ITEMS_PER_PAGE}&page=${page}&order=${dir}&sort=${sort}`;\r\n\r\n  if (cache[url]) {\r\n    return cache[url];\r\n  }\r\n\r\n  if (cancelController) {\r\n    cancelController.abort();\r\n  }\r\n\r\n  const controller = new AbortController();\r\n\r\n  cancelController = controller;\r\n\r\n  const response = await fetch(url, { signal: controller.signal });\r\n\r\n  const { items, total_count: totalCount } = await response.json();\r\n\r\n  cancelController = null;\r\n\r\n  if (Object.keys(cache).length > LIMIT_CACHE_ITEMS) {\r\n    for (const prop of Object.getOwnPropertyNames(cache)) {\r\n      delete cache[prop];\r\n    }\r\n  }\r\n\r\n  cache[url] = { items, totalCount };\r\n\r\n  return { items, totalCount };\r\n};\r\n","export const BACKEND_URL = 'https://api.github.com';\r\n\r\nexport const REQUEST_TIME_DELAY = 300;\r\nexport const ITEMS_PER_PAGE = 30;\r\nexport const DEFAULT_SORT = 'stars';\r\n\r\nexport const LIMIT_CACHE_ITEMS = 10;\r\n","export const SET_REPOS = 'REPOS_ACTION:SET_REPOS';\r\nexport const SET_TOTAL_REPOS = 'REPOS_ACTION:SET_TOTAL_REPOS';\r\nexport const SET_IS_LOADING = 'REPOS_ACTION:SET_IS_LOADING';\r\nexport const TO_DEFAULT = 'REPOS_ACTION:TO_DEFAULT';\r\n","import * as api from 'services/reposService';\r\n\r\nimport {\r\n  SET_REPOS,\r\n  SET_IS_LOADING,\r\n  SET_TOTAL_REPOS,\r\n  TO_DEFAULT,\r\n} from './actionTypes';\r\n\r\nconst setRepos = (users) => ({\r\n  type: SET_REPOS,\r\n  payload: users,\r\n});\r\n\r\nconst setTotalRepos = (totalRepos) => ({\r\n  type: SET_TOTAL_REPOS,\r\n  payload: totalRepos,\r\n});\r\n\r\nconst setIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const toDefault = () => ({\r\n  type: TO_DEFAULT,\r\n});\r\n\r\nexport const requestGithubUsers = (params) => async (dispatch) => {\r\n  try {\r\n    dispatch(setIsLoading(true));\r\n\r\n    const { items, totalCount } = await api.getRepositories(params);\r\n\r\n    dispatch(setRepos(items));\r\n    dispatch(setTotalRepos(totalCount));\r\n\r\n    dispatch(setIsLoading(false));\r\n  } catch (err) {\r\n    console.log('Bad news...', err);\r\n    dispatch(setRepos([]));\r\n  }\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as actions from 'containers/RepositoriesList/actions';\n\nimport { usePagination } from 'hooks/usePagination';\nimport { useDebouncedEffect } from 'hooks/useDebouncedEffect';\n\nimport { REQUEST_TIME_DELAY } from 'config';\n\nexport const useGithubReposTable = (input) => {\n  const dispatch = useDispatch();\n\n  const [sortDir, setSortDir] = useState('asc');\n\n  const { items, totalItems, isLoading } = useSelector((state) => state.repos);\n\n  const { totalPages, currentPage, setCurrentPage } = usePagination(totalItems);\n\n  const toDefault = () => {\n    setSortDir('asc');\n    setCurrentPage(0);\n  };\n\n  const handleChangeSortDir = () => {\n    const dir = sortDir === 'asc' ? 'desc' : 'asc';\n\n    setSortDir(dir);\n    setCurrentPage(0);\n    getTableData({ dir, input, page: 1 });\n  };\n\n  const handleChangePage = ({ selected }) => {\n    setCurrentPage(selected);\n    getTableData({ page: selected + 1, input });\n  };\n\n  const getTableData = async ({ input, ...restParams }) => {\n    if (input) {\n      dispatch(\n        actions.requestGithubUsers({\n          dir: sortDir,\n          page: currentPage + 1,\n          input,\n          ...restParams,\n        })\n      );\n    } else {\n      dispatch(actions.toDefault());\n    }\n  };\n\n  useDebouncedEffect(\n    () => {\n      toDefault();\n      getTableData({ input, page: 1, dir: 'asc' });\n    },\n    REQUEST_TIME_DELAY,\n    [input]\n  );\n\n  return {\n    isLoading,\n    items,\n    sortDir,\n    totalPages,\n    currentPage,\n    handleChangePage,\n    handleChangeSortDir,\n    getTableData,\n  };\n};\n","import { useMemo, useState } from 'react';\r\n\r\nimport { ITEMS_PER_PAGE } from '../config';\r\n\r\nexport const usePagination = (totalItems, itemsPerPage = ITEMS_PER_PAGE) => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const totalPages = useMemo(() => Math.ceil(totalItems / itemsPerPage), [\r\n    totalItems,\r\n    itemsPerPage,\r\n  ]);\r\n\r\n  return {\r\n    totalPages,\r\n    currentPage,\r\n    setCurrentPage,\r\n  };\r\n};\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport const useDebouncedEffect = (effect, delay, deps) => {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const callback = useCallback(effect, deps);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      callback();\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [callback, delay]);\r\n};\r\n","import React from 'react';\r\n\r\nimport Pagination from 'components/Pagination';\r\nimport Spiner from 'components/Spinner';\r\nimport EmptyView from 'components/EmptyView';\r\nimport ResultsList from 'components/ResultsList';\r\nimport ChangeSortDirButton from 'components/ChangeSortDirButton';\r\n\r\nimport { useGithubReposTable } from './hooks/useGithubReposTable';\r\n\r\nconst RepositoriesList = ({ inputText }) => {\r\n  const {\r\n    isLoading,\r\n    items,\r\n    sortDir,\r\n    totalPages,\r\n    currentPage,\r\n    handleChangePage,\r\n    handleChangeSortDir,\r\n  } = useGithubReposTable(inputText);\r\n\r\n  if (isLoading) {\r\n    return <Spiner />;\r\n  }\r\n\r\n  if (!items?.length) {\r\n    return <EmptyView />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ChangeSortDirButton handleClick={handleChangeSortDir} dir={sortDir} />\r\n      <ResultsList list={items} />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        handleChangePage={handleChangePage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepositoriesList;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst SearchInput = ({ handleChange, value }) => {\r\n  return (\r\n    <div className='search__container'>\r\n      <p className='search__title'>Go ahead, search repositories</p>\r\n      <input\r\n        className='search__input'\r\n        type='text'\r\n        placeholder='Search'\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { SET_REPOS, SET_IS_LOADING, SET_TOTAL_REPOS, TO_DEFAULT } from './actionTypes';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  totalItems: 0,\r\n  isLoading: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_REPOS:\r\n      return { ...state, items: action.payload };\r\n    case SET_TOTAL_REPOS:\r\n      return { ...state, totalItems: action.payload };\r\n    case SET_IS_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    case TO_DEFAULT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reposReducer from 'containers/RepositoriesList/reducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst composedEnhancers = applyMiddleware(...middlewares);\r\n\r\nconst reducers = {\r\n  repos: reposReducer,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  ...reducers,\r\n});\r\n\r\nconst store = createStore(rootReducer, initialState, composedEnhancers);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport RepositoriesList from 'containers/RepositoriesList';\r\n\r\nimport SearchInput from 'components/SearchInput';\r\n\r\nimport store from 'store';\r\n\r\nconst SearchPage = () => {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <SearchInput value={input} handleChange={handleChange} />\r\n      <RepositoriesList inputText={input} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport SearchPage from 'containers/SearchPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SearchPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}